"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[471],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>d});var i=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function n(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);r&&(i=i.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,i)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?n(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function o(e,r){if(null==e)return{};var t,i,a=function(e,r){if(null==e)return{};var t,i,a={},n=Object.keys(e);for(i=0;i<n.length;i++)t=n[i],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(i=0;i<n.length;i++)t=n[i],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=i.createContext({}),l=function(e){var r=i.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},u=function(e){var r=l(e.components);return i.createElement(c.Provider,{value:r},e.children)},v={inlineCode:"code",wrapper:function(e){var r=e.children;return i.createElement(i.Fragment,{},r)}},p=i.forwardRef((function(e,r){var t=e.components,a=e.mdxType,n=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=l(t),d=a,g=p["".concat(c,".").concat(d)]||p[d]||v[d]||n;return t?i.createElement(g,s(s({ref:r},u),{},{components:t})):i.createElement(g,s({ref:r},u))}));function d(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var n=t.length,s=new Array(n);s[0]=p;var o={};for(var c in r)hasOwnProperty.call(r,c)&&(o[c]=r[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var l=2;l<n;l++)s[l]=t[l];return i.createElement.apply(null,s)}return i.createElement.apply(null,t)}p.displayName="MDXCreateElement"},1851:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>s,default:()=>v,frontMatter:()=>n,metadata:()=>o,toc:()=>l});var i=t(7462),a=(t(7294),t(3905));const n={},s="Services & registry",o={unversionedId:"services",id:"services",title:"Services & registry",description:"K5 registry and services are the core of the runtime. Services provided additional features in your runtime, like supporting loading appliccations, starting a HTTP container, etc.",source:"@site/docs/04-services.md",sourceDirName:".",slug:"/services",permalink:"/karaf5/docs/services",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Architecture",permalink:"/karaf5/docs/architecture"},next:{title:"Tools",permalink:"/karaf5/docs/tools"}},c={},l=[{value:"K5 service",id:"k5-service",level:2},{value:"K5 registry &amp; loading services",id:"k5-registry--loading-services",level:2},{value:"Core services",id:"core-services",level:2},{value:"Configuration service",id:"configuration-service",level:3},{value:"Lifecycle service",id:"lifecycle-service",level:3},{value:"Classloader service",id:"classloader-service",level:3},{value:"Module services",id:"module-services",level:2},{value:"Banner",id:"banner",level:3},{value:"Camel",id:"camel",level:3},{value:"Classpath",id:"classpath",level:3},{value:"JSON configuration",id:"json-configuration",level:3},{value:"Properties configuration",id:"properties-configuration",level:3},{value:"Extractor",id:"extractor",level:3},{value:"HTTP",id:"http",level:3},{value:"JPA",id:"jpa",level:3},{value:"OSGi module manager",id:"osgi-module-manager",level:3},{value:"REST",id:"rest",level:3},{value:"Spring Boot module manager",id:"spring-boot-module-manager",level:3},{value:"Create a service",id:"create-a-service",level:2}],u={toc:l};function v(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,i.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"services--registry"},"Services & registry"),(0,a.kt)("p",null,"K5 registry and services are the core of the runtime. Services provided additional features in your runtime, like supporting loading appliccations, starting a HTTP container, etc."),(0,a.kt)("p",null,"Basically, a runtime is modules loader, easy module register services in the K5 service registry."),(0,a.kt)("h2",{id:"k5-service"},"K5 service"),(0,a.kt)("p",null,'A service is a "classic" Java SPI: a service is described by a Java interface.'),(0,a.kt)("p",null,"Any module in a K5 runtime can use and register services."),(0,a.kt)("p",null,"A service can:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"have a name (default is class simple name)"),(0,a.kt)("li",{parentName:"ul"},"have a priority (if you want to define an order between services or defining a kind of starting stages by grouping services).")),(0,a.kt)("h2",{id:"k5-registry--loading-services"},"K5 registry & loading services"),(0,a.kt)("p",null,"The K5 Service Registry stores any K5 services. The registry is basically a ",(0,a.kt)("inlineCode",{parentName:"p"},"Map<Class<?>, Service>"),"."),(0,a.kt)("p",null,'It automatically loads K5 services: the services loading can be "ordered" by priority in the registry.'),(0,a.kt)("p",null,"K5 Service Registry is unique in a runtime and shared by any services/applications present in the runtime."),(0,a.kt)("p",null,"The K5 service registration give you access to the Service Registry, and you can interact with it. You also have util method to get the K5 Service Registry without registrering a service."),(0,a.kt)("p",null,"Once you have the Service Registry, you can:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"get any service from the registry (including the K5 core services)"),(0,a.kt)("li",{parentName:"ul"},"get all services from a certain type (interface)"),(0,a.kt)("li",{parentName:"ul"},"registry your own services"),(0,a.kt)("li",{parentName:"ul"},"unregister any service")),(0,a.kt)("p",null,"K5 Service Registry service class is ",(0,a.kt)("inlineCode",{parentName:"p"},"org.apache.karaf.boot.service.ServiceRegistry"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public class ServiceRegistry implements AutoCloseable {\n\n  /**\n   * Retrieve all services from the registry.\n   *\n   * @return all services from the registry.\n   */\n  public Map<Class<?>, Service> getAll() { ... }\n\n    /**\n     * Retrieve a service from the registry.\n     *\n     * @param serviceClass the service class identifying the service.\n     * @param <T>          the service type.\n     * @return the service instance from the registry.\n     */\n    public <T> T get(final Class<T> serviceClass) { ... }\n\n    /**\n     * Lookup a stream of service by type.\n     *\n     * @param serviceClass looked up type.\n     * @param <T>          expected type.\n     * @return the instances matching the requested type.\n     */\n    public <T> Stream<Service> findByType(final Class<T> serviceClass) { ... }\n\n    /**\n     * Register a service in the registry.\n     *\n     * @param service the service to add in the registry.\n     * @return true if the service has been added, false else.\n     */\n    public boolean add(final Service service) { ... }\n\n    /**\n     * Remove a service from the registry.\n     *\n     * @param service the service to remove.\n     */\n    public void remove(final Service service) { ... }\n\n    /**\n     * Close (stop) the service registry.\n     */\n    @Override\n    public void close() { ... }\n\n    /**\n     * Start the service registry.\n     */\n    public void start() { ... }\n    \n\n}\n")),(0,a.kt)("p",null,"K5 Service Registry is itself a K5 service."),(0,a.kt)("h2",{id:"core-services"},"Core services"),(0,a.kt)("p",null,"Any K5 runtime includes karaf-boot module (runtime core). Karaf Boot provides the core services, provided out of the box for you, available in the service registry."),(0,a.kt)("h3",{id:"configuration-service"},"Configuration service"),(0,a.kt)("p",null,"The configuration service is the main configuration store for the runtime itself, but can also be used by the modules to store their own configurations."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"KarafConfigService")," provides access to the ",(0,a.kt)("inlineCode",{parentName:"p"},"KarafConfig")," resources:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"Properties")," is key/value pair where you can store anything. These properties can be populated by system properties or environment variables."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"Profiles")," store libaries that you want to share accross several modules in the runtime."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"Applications")," define the properties of your applications modules.")),(0,a.kt)("p",null,"You can interact with the K5 configuration service programmatically, but you can also populate the configuration via other K5 services, like K5 JSON Configuration or K5 Properties Configuration services. You can also create your own service to populate and interact with the core K5 configuration service."),(0,a.kt)("h3",{id:"lifecycle-service"},"Lifecycle service"),(0,a.kt)("p",null,'K5 Lifecycle service allows you to "hook" your own services into the runtime lifecycle. It allows to call service method during runtime start and stop.'),(0,a.kt)("p",null,"The lifecycle service is registered in the K5 service registry, it means that starting the service registry is actually starting the lifecycle service."),(0,a.kt)("p",null,"You basically have two callback hooks you can create in your service:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"calling one of your service method when the service is registered in the service registry. For that, you just have to implement ",(0,a.kt)("inlineCode",{parentName:"li"},"onRegister(ServiceRegistry serviceRegistry)")," method in your service:",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public void onRegister(ServiceRegistry serviceRegistry) {\n  ...\n}\n"))),(0,a.kt)("li",{parentName:"ul"},"once you have the ",(0,a.kt)("inlineCode",{parentName:"li"},"ServiceRegistry"),", you can add your service methods in the ",(0,a.kt)("inlineCode",{parentName:"li"},"KarafLifeCycleService"),", in the ",(0,a.kt)("inlineCode",{parentName:"li"},"onStart()")," and/or ",(0,a.kt)("inlineCode",{parentName:"li"},"onShutdown()")," phases:",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java"},"KarafLifeCycleService karafLifeCycleService = serviceRegistry.get(KarafLifeCycleService.class);\nkarafLifeCycleService.onStart(() -> {\n  // start\n});\nkarafLifeCycleService.onShutdown(() -> {\n  // shutdow \n});\n")))),(0,a.kt)("h3",{id:"classloader-service"},"Classloader service"),(0,a.kt)("h2",{id:"module-services"},"Module services"),(0,a.kt)("p",null,'K5 also provides additional services that you can use "out of the box" to easily create your own services.'),(0,a.kt)("p",null,"You don't have to implement everything, K5 services help you. Loading and using these services is very simple: just add the services in your dependencies (for instance in your Maven ",(0,a.kt)("inlineCode",{parentName:"p"},"pom.xml")," dependencies) and in the runtime."),(0,a.kt)("h3",{id:"banner"},"Banner"),(0,a.kt)("p",null,"Banner service just display a fancy message when the runtime start."),(0,a.kt)("p",null,"You can customize the message using the ",(0,a.kt)("inlineCode",{parentName:"p"},"KARAF_BANNER")," environment variable or ",(0,a.kt)("inlineCode",{parentName:"p"},"karaf.banner")," system property."),(0,a.kt)("p",null,"For instance, here's a ",(0,a.kt)("inlineCode",{parentName:"p"},"karaf-build.json")," to add the Banner Service in a runtime:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "my-runtime",\n  "properties": {},\n  "dependencies": [\n    "k5:karaf-boot", "k5:banner"\n  ]\n}\n')),(0,a.kt)("p",null,"If we start ",(0,a.kt)("inlineCode",{parentName:"p"},"my-runtime"),", you can see the startup message:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ java -jar karaf-boot-5.0-SNAPSHOT.jar\noct. 02, 2022 12:05:25 PM org.apache.karaf.boot.Main main\nINFOS: Starting runtime in exploded mode\nKaraf lib: /Users/jbonofre/test/my-runtime\noct. 02, 2022 12:05:25 PM org.apache.karaf.boot.service.ServiceRegistry add\nINFOS: Adding config service (-2147483647)\noct. 02, 2022 12:05:25 PM org.apache.karaf.boot.service.ServiceRegistry add\nINFOS: Adding lifecycle service (-1000)\noct. 02, 2022 12:05:25 PM org.apache.karaf.boot.service.ServiceRegistry add\nINFOS: Adding classloader-service service (-1000)\noct. 02, 2022 12:05:25 PM org.apache.karaf.boot.service.ServiceRegistry add\nINFOS: Adding karaf-banner service (2147483647)\noct. 02, 2022 12:05:25 PM org.apache.karaf.banner.WelcomeBannerService onRegister\nINFOS:\n        __ __                  ____\n       / //_/____ __________ _/ __/\n      / ,<  / __ `/ ___/ __ `/ /_\n     / /| |/ /_/ / /  / /_/ / __/\n    /_/ |_|\\__,_/_/   \\__,_/_/\n\n  Apache Karaf 5.x\n\noct. 02, 2022 12:05:25 PM org.apache.karaf.boot.service.ServiceRegistry lambda$start$2\nINFOS: Starting services\noct. 02, 2022 12:05:25 PM org.apache.karaf.boot.service.KarafLifeCycleService start\nINFOS: Starting lifecycle service\n")),(0,a.kt)("p",null,"Now, we can try to change the message by settings the ",(0,a.kt)("inlineCode",{parentName:"p"},"KARAF_BANNER")," environment variable:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'$ export KARAF_BANNER="Hello K5"\n')),(0,a.kt)("p",null,"and we can see now our message when launching ",(0,a.kt)("inlineCode",{parentName:"p"},"my-runtime"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ java -jar karaf-boot-5.0-SNAPSHOT.jar\noct. 02, 2022 12:07:58 PM org.apache.karaf.boot.Main main\nINFOS: Starting runtime in exploded mode\nKaraf lib: /Users/jbonofre/test/my-runtime\noct. 02, 2022 12:07:58 PM org.apache.karaf.boot.service.ServiceRegistry add\nINFOS: Adding config service (-2147483647)\noct. 02, 2022 12:07:58 PM org.apache.karaf.boot.service.ServiceRegistry add\nINFOS: Adding lifecycle service (-1000)\noct. 02, 2022 12:07:58 PM org.apache.karaf.boot.service.ServiceRegistry add\nINFOS: Adding classloader-service service (-1000)\noct. 02, 2022 12:07:58 PM org.apache.karaf.boot.service.ServiceRegistry add\nINFOS: Adding karaf-banner service (2147483647)\noct. 02, 2022 12:07:58 PM org.apache.karaf.banner.WelcomeBannerService onRegister\nINFOS: Welcome K5\noct. 02, 2022 12:07:58 PM org.apache.karaf.boot.service.ServiceRegistry lambda$start$2\nINFOS: Starting services\noct. 02, 2022 12:07:58 PM org.apache.karaf.boot.service.KarafLifeCycleService start\nINFOS: Starting lifecycle service\n")),(0,a.kt)("h3",{id:"camel"},"Camel"),(0,a.kt)("h3",{id:"classpath"},"Classpath"),(0,a.kt)("h3",{id:"json-configuration"},"JSON configuration"),(0,a.kt)("h3",{id:"properties-configuration"},"Properties configuration"),(0,a.kt)("h3",{id:"extractor"},"Extractor"),(0,a.kt)("h3",{id:"http"},"HTTP"),(0,a.kt)("h3",{id:"jpa"},"JPA"),(0,a.kt)("h3",{id:"osgi-module-manager"},"OSGi module manager"),(0,a.kt)("h3",{id:"rest"},"REST"),(0,a.kt)("h3",{id:"spring-boot-module-manager"},"Spring Boot module manager"),(0,a.kt)("h2",{id:"create-a-service"},"Create a service"))}v.isMDXComponent=!0}}]);