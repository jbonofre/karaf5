"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[771],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(t),m=i,h=d["".concat(u,".").concat(m)]||d[m]||c[m]||o;return t?r.createElement(h,a(a({ref:n},p),{},{components:t})):r.createElement(h,a({ref:n},p))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=d;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5265:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=t(7462),i=(t(7294),t(3905));const o={},a="Tools",l={unversionedId:"tools",id:"tools",title:"Tools",description:"Minho provides several tools in order for you to easily create your runtime.",source:"@site/docs/05-tools.md",sourceDirName:".",slug:"/tools",permalink:"/karaf5/docs/tools",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Services & registry",permalink:"/karaf5/docs/services"}},u={},s=[{value:"<code>minho-build.json</code> file",id:"minho-buildjson-file",level:2},{value:"CLI",id:"cli",level:2},{value:"Installation",id:"installation",level:3},{value:"Use",id:"use",level:3},{value:"Apache Maven plugin",id:"apache-maven-plugin",level:2},{value:"Gradle",id:"gradle",level:2},{value:"REST",id:"rest",level:2},{value:"Creator (online)",id:"creator-online",level:2}],p={toc:s};function c(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"tools"},"Tools"),(0,i.kt)("p",null,"Minho provides several tools in order for you to easily create your runtime."),(0,i.kt)("p",null,"Basically, Minho tools can use ",(0,i.kt)("inlineCode",{parentName:"p"},"minho-build.json")," file describing the runtime."),(0,i.kt)("p",null,"Then, you can create different forms (distributions) for your runtime:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"package")," creates a directory containing all required resources for the runtime (exploded form). Then, you go in this directory and just launch the runtime with ",(0,i.kt)("inlineCode",{parentName:"li"},"java -jar minho-boot-xx.jar")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"jar")," creates an uber jar packaging runtime resources in one archive. Then, you launch the runtime with ",(0,i.kt)("inlineCode",{parentName:"li"},"java -jar myruntime.jar")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"archive")," creates a zip archive containing runtime resources and startup script. After extracting this archive, you can launch the runtime with ",(0,i.kt)("inlineCode",{parentName:"li"},"./bin/minho.sh"))),(0,i.kt)("p",null,"You have different options to create the runtime."),(0,i.kt)("h2",{id:"minho-buildjson-file"},(0,i.kt)("inlineCode",{parentName:"h2"},"minho-build.json")," file"),(0,i.kt)("p",null,"All Minho tools are using a runtime descriptor: ",(0,i.kt)("inlineCode",{parentName:"p"},"minho-build.json"),"."),(0,i.kt)("p",null,"This file describe:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"name")," of the runtime"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"properties")," used to specify extra information to build the runtime"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"dependencies")," is the modules (libraries) to be included in the runtime (using ",(0,i.kt)("inlineCode",{parentName:"li"},"file"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"http"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"mvn")," URL)")),(0,i.kt)("p",null,"Here's an example of ",(0,i.kt)("inlineCode",{parentName:"p"},"minho-build.json")," file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "my-runtime",\n    "properties": {\n        "include.transitive": "true"\n    },\n    "dependencies": [\n        "minho:minho-boot",\n        "mvn:commons-lang/commons-lang/2.6"\n    ]\n}\n')),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"NB: ",(0,i.kt)("inlineCode",{parentName:"em"},"minho-build.json")," can be written by hand or can be generated by the ",(0,i.kt)("inlineCode",{parentName:"em"},"minho-maven-plugin")," for instance.")),(0,i.kt)("h2",{id:"cli"},"CLI"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"minho-build")," is a command line to create the runtime based on ",(0,i.kt)("inlineCode",{parentName:"p"},"minho-build.json")," descriptor."),(0,i.kt)("h3",{id:"installation"},"Installation"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"minho-build")," CLI "),(0,i.kt)("h3",{id:"use"},"Use"),(0,i.kt)("h2",{id:"apache-maven-plugin"},"Apache Maven plugin"),(0,i.kt)("h2",{id:"gradle"},"Gradle"),(0,i.kt)("h2",{id:"rest"},"REST"),(0,i.kt)("h2",{id:"creator-online"},"Creator (online)"))}c.isMDXComponent=!0}}]);